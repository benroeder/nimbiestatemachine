[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nimbie"
version = "0.1.0"
description = "Python driver and state machine for Acronova Nimbie NB21 CD/DVD duplicator"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Ben Roeder"},
]
keywords = ["nimbie", "cd", "dvd", "duplicator", "automation", "hardware"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Hardware",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "pyusb>=1.2.1",
    "transitions>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-mock>=3.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "types-pyusb>=1.2.0",
]

[project.urls]
Homepage = "https://github.com/benroeder/nimbiestatemachine"
Documentation = "https://github.com/benroeder/nimbiestatemachine#readme"
Repository = "https://github.com/benroeder/nimbiestatemachine"
Issues = "https://github.com/benroeder/nimbiestatemachine/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["nimbie*"]
exclude = ["tests*", "examples*"]

[tool.setuptools.package-data]
nimbie = ["py.typed"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T20", # flake8-print
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "T201",  # print statements (ok for driver)
    "N812",  # Allow USBArray naming
]

[tool.ruff.lint.per-file-ignores]
"examples/*" = ["T20"]  # Allow print in examples
"tests/*" = ["T20"]     # Allow print in tests

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "usb.*",
    "transitions.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
markers = [
    "hardware: marks tests as requiring hardware (deselect with '-m \"not hardware\"')",
]